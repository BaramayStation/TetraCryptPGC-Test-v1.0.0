apiVersion: apps/v1
kind: Deployment
metadata:
  name: tetrapgc
  namespace: security
  labels:
    app: tetrapgc
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tetrapgc
  template:
    metadata:
      labels:
        app: tetrapgc
    spec:
      serviceAccountName: tetrapgc-sa
      automountServiceAccountToken: false  # ✅ Prevents auto-mounting service account token (Security Best Practice)

      securityContext:
        runAsNonRoot: true  # ✅ Enforce non-root execution
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault  # ✅ Secure default seccomp profile

      containers:
        - name: tetrapgc
          image: ghcr.io/abraxas618/tetrapgc:v1.2.3  # ✅ Fixed version to prevent supply chain attacks
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false  # ✅ Prevents privilege escalation attacks
            capabilities:
              drop:
                - ALL  # ✅ Removes all unnecessary capabilities
            readOnlyRootFilesystem: true  # ✅ Enforce immutable root filesystem
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
              ephemeral-storage: "2Gi"
          ports:
            - containerPort: 8080
              name: api
              protocol: TCP
          env:
            - name: QKD_SERVERS
              value: "qkd1.example.com,qkd2.example.com"  # ✅ Secure QKD Servers for Post-Quantum Encryption
            - name: QKD_PORT
              value: "5000"
            - name: DEVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name  # ✅ Dynamically fetch pod metadata for unique device IDs
          volumeMounts:
            - name: secure-storage
              mountPath: "/secure_storage"
              readOnly: false  # ✅ Allow encrypted key storage

      volumes:
        - name: secure-storage
          persistentVolumeClaim:
            claimName: tetrapgc-pvc  # ✅ Ensures encrypted persistent storage

---
apiVersion: v1
kind: Service
metadata:
  name: tetrapgc-service
  namespace: security
spec:
  selector:
    app: tetrapgc
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8080
  type: ClusterIP  # ✅ Secure internal-only service for in-cluster communication

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tetrapgc-pvc
  namespace: security
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  # ✅ Persistent encrypted storage for PQC key material